<?php
/*
Plugin Name: yoonde
Plugin URI:  https://yoonde.de/api
Description: Plugin to access the yoonde-API and create yoonde-Token automatically on "woocommerce_order_status_completed"
Version:     1.0.1
Author:      Chris Ahrweiler
Author URI:  https://yoonde.de
License:     GPL2
License URI: https://www.gnu.org/licenses/gpl-2.0.html
*/

function createYoondeToken($order_id)
{
	$woocommerce_yoonde_api_options = get_option( 'woocommerce_yoonde_api_option_name' );
    $partner_data = array
    (
	    'api' => $woocommerce_yoonde_api_options['yoonde_api_token_0']
    );

    $order = new WC_Order( $order_id );
    $order_data = array
    (
    	'first_name' => $order->get_billing_first_name(),
        'last_name' => $order->get_billing_last_name(),
        'email' => $order->get_billing_email()
    );

	$items  = $order->get_items();
	foreach ( $order->get_items() as $item_id => $item )
	{
		$product=$item->get_product();
		if ($product->get_virtual() && $product->get_downloadable())
		{
			if (!empty($product->get_attribute('yoonde_category')) && !empty($product->get_attribute('yoonde_chunks')))
			{
			    $item_data = array
				(
					'action' => 'CREATE',
					'category' => $product->get_attribute('yoonde_category'),
					'chunks' => $product->get_attribute('yoonde_chunks')
				);
			    $params=array_merge($partner_data, $order_data, $item_data);
			    $encoded=json_encode($params);
				error_log($encoded);

				$args = array(
					'body'        => $params,
					'timeout'     => '5', 'redirection' => '5', 'httpversion' => '1.0',
					'blocking'    => true, 'headers'     => array(), 'cookies'     => array()
					);
				$response = wp_remote_post( 'https://yoonde.de/api.php', $args );
				error_log($response['body']);
			}
		}
	};
};
add_action( 'woocommerce_order_status_completed', 'createYoondeToken',10,1 );

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class WooCommerceYoondeAPI {
	private $woocommerce_yoonde_api_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'woocommerce_yoonde_api_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'woocommerce_yoonde_api_page_init' ) );
	}

	public function woocommerce_yoonde_api_add_plugin_page() {
		add_menu_page(
			'yoonde',
			'yoonde',
			'manage_options',
			'woocommerce-yoonde-api',
			array( $this, 'woocommerce_yoonde_api_create_admin_page' ),
			'dashicons-video-alt',
			26
		);
	}

	public function woocommerce_yoonde_api_create_admin_page() {
		$this->woocommerce_yoonde_api_options = get_option( 'woocommerce_yoonde_api_option_name' );
		?>

		<div class="wrap">
			<h2>yoonde</h2>
			<p>Maintain your yoonde-partner credentials here.</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'woocommerce_yoonde_api_option_group' );
					do_settings_sections( 'woocommerce-yoonde-api-admin' );
					submit_button();
				?>
			</form>

		</div>

		<div class="wrap">
			<h3>Token Liste</h3>
			<div style="background: white; border: solid 1px rgb(204, 208, 212); max-width: 800px; padding: 10px;">
				<?php
					$api_token=$this->woocommerce_yoonde_api_options['yoonde_api_token_0'];
					if ($api_token!==null)
					{
						$params = array('api' => $api_token, 'action' => 'LIST');
						$args = array(
							'body'        => $params,
							'timeout'     => '5', 'redirection' => '5', 'httpversion' => '1.0',
							'blocking'    => true, 'headers'     => array(), 'cookies'     => array()
							);
						$response = wp_remote_post( 'https://yoonde.de/api.php', $args );
						print_r($response['body']);
					};
				?>
			</div>
		</div>
		<?php
			$pluginDir = plugin_dir_url( __FILE__ );
			wp_register_style('datatablesCSS', $pluginDir.'css/datatables.min.css');
			wp_enqueue_style('datatablesCSS');
			wp_register_script('datatablesJS', $pluginDir.'js/datatables.min.js');
			wp_enqueue_script('datatablesJS');
		?>
			<script>
		   	( function( $ ) { $( document ).ready( function() { $("#token_table").DataTable(); }); })( jQuery );
		  </script>
	<?php }

	public function woocommerce_yoonde_api_page_init() {
		register_setting(
			'woocommerce_yoonde_api_option_group',
			'woocommerce_yoonde_api_option_name',
			array( $this, 'woocommerce_yoonde_api_sanitize' )
		);

		add_settings_section(
			'woocommerce_yoonde_api_setting_section',
			'Settings',
			array( $this, 'woocommerce_yoonde_api_section_info' ),
			'woocommerce-yoonde-api-admin'
		);

		add_settings_field(
			'yoonde_api_token_0',
			'yoonde-API Token',
			array( $this, 'yoonde_api_token_0_callback' ),
			'woocommerce-yoonde-api-admin',
			'woocommerce_yoonde_api_setting_section'
		);
	}

	public function woocommerce_yoonde_api_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['yoonde_api_token_0'] ) ) {
			$sanitary_values['yoonde_api_token_0'] = sanitize_text_field( $input['yoonde_api_token_0'] );
		}

		return $sanitary_values;
	}

	public function woocommerce_yoonde_api_section_info() {

	}

	public function yoonde_api_token_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="woocommerce_yoonde_api_option_name[yoonde_api_token_0]" id="yoonde_api_token_0" value="%s">',
			isset( $this->woocommerce_yoonde_api_options['yoonde_api_token_0'] ) ? esc_attr( $this->woocommerce_yoonde_api_options['yoonde_api_token_0']) : ''
		);
	}

}
if ( is_admin() )
	$woocommerce_yoonde_api = new WooCommerceYoondeAPI();
?>
